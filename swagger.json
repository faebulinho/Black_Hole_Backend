{
  "openapi": "3.0.0",
  "info": {
    "title": "Black Hole API",
    "version": "1.0.0",
    "description": "API for retrieving black hole information"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/blackholes/{name}": {
      "get": {
        "summary": "Get black hole information",
        "description": "Retrieves information about a specific black hole by name",
        "tags": [
          "Black Holes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the black hole",
            "example": "Sagittarius A*"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the black hole"
                    },
                    "mass": {
                      "type": "string",
                      "description": "Mass of the black hole"
                    },
                    "source": {
                      "type": "string",
                      "description": "Source URL of the information"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Black hole not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/info/datetime": {
      "get": {
        "summary": "Get current date and time",
        "description": "Returns the current server date and time along with timezone information",
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datetime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "timezone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/info/version": {
      "get": {
        "summary": "Get API version information",
        "description": "Returns the current API version and environment information",
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "nodeVersion": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/particles": {
      "get": {
        "summary": "Get all particles",
        "tags": [
          "Particles"
        ]
      },
      "post": {
        "summary": "Create particle",
        "tags": [
          "Particles"
        ]
      }
    },
    "/particles/{id}": {
      "get": {
        "summary": "Get particle by ID",
        "tags": [
          "Particles"
        ]
      },
      "put": {
        "summary": "Update particle",
        "tags": [
          "Particles"
        ]
      },
      "delete": {
        "summary": "Delete particle",
        "tags": [
          "Particles"
        ]
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user with the provided data",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "description": "Retrieves a list of all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieves a user by their ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Updates a user's information by their ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user by their ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Black Holes",
      "description": "API endpoints for black hole information"
    },
    {
      "name": "Info",
      "description": "API endpoints for system information"
    },
    {
      "name": "Users",
      "description": "API endpoints for user management"
    }
  ]
}